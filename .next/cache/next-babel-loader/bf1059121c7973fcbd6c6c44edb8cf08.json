{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\work\\\\nextjs-test\\\\pages\\\\post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Content = function Content() {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n};\n\nvar Post = function Post() {\n  var router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            console.log(context);\n            _context.next = 4;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["D:/work/nextjs-test/pages/post/[id].js"],"names":["useRouter","Layout","fetch","Content","router","query","id","Post","getInitialProps","context","console","log","res","json","show","name"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CADF;AAMD,CARD;;AAUA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMH,MAAM,GAAGJ,SAAS,EAAxB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;AAUAO,IAAI,CAACC,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbH,YAAAA,EADa,GACNG,OAAO,CAACJ,KADF,CACbC,EADa;AAErBI,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAFqB;AAAA,mBAGHP,KAAK,wCAAiCI,EAAjC,EAHF;;AAAA;AAGfM,YAAAA,GAHe;AAAA;AAAA,mBAIFA,GAAG,CAACC,IAAJ,EAJE;;AAAA;AAIfC,YAAAA,IAJe;AAMrBJ,YAAAA,OAAO,CAACC,GAAR,yBAA6BG,IAAI,CAACC,IAAlC;AANqB,6CAQd;AAAED,cAAAA,IAAI,EAAJA;AAAF,aARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeP,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Layout from \"../../components/Layout\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Content = () => {\r\n  const router = useRouter();\r\n  return (\r\n    <>\r\n      <h1>{router.query.id}</h1>\r\n      <p>This is the blog post content.</p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <Layout>\r\n      <Content />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  console.log(context);\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n  const show = await res.json();\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}